- name: Install python3-pip, python3-venv, and python3-rpi-lgpio
  ansible.builtin.apt:
    name:
      - python3-pip
      - python3-venv
      - python3-rpi-lgpio
    state: present
    update_cache: true
  become: true
  tags:
    - pip

- name: Create app directory
  ansible.builtin.file:
    path: "{{ app_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  tags:
    - pip
    - dotenv
    - config_files
    - app_files

- name: Create config directory
  ansible.builtin.file:
    path: "{{ config_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  tags:
    - config_files

- name: Copy requirements files to the app dir
  ansible.builtin.copy:
    src: ../../src/requirements.txt
    dest: "{{ requirements_file }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  tags: pip

- name: Update pip, setuptools to latest in virtualenv
  ansible.builtin.pip:
    name: ['pip', 'setuptools']
    state: latest
    virtualenv: "{{ venv_path }}"
    virtualenv_command: "python3 -m venv"
  tags: pip

- name: Install Python requirements in virtualenv
  ansible.builtin.pip:
    requirements: "{{ requirements_file }}"
    virtualenv: "{{ venv_path }}"
    virtualenv_command: "python3 -m venv"
  register: common_pip_requirements_result
  until: common_pip_requirements_result is succeeded
  retries: 3
  delay: 5
  tags: pip

- name: Copy dotenv file to the app dir, make backup first
  ansible.builtin.copy:
    src: "../vault/.env.vault"
    dest: "{{ app_dir }}/.env"
    decrypt: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    backup: true
  tags: dotenv

- name: Create log directory
  ansible.builtin.file:
    path: "{{ log_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  become: true
  tags: logging
